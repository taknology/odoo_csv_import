from odoo_csv_tools.lib import mapper
from odoo_csv_tools.lib.transform import Processor

from import_globals import (lipseys_product_prefix
                            , data_file_path)

processor = Processor(data_file_path + "Lipseys-Catalog.csv", delimiter=",")

lipseys_product_mapping = {
    "id": mapper.m2o_map(lipseys_product_prefix, mapper.val("UPC"))
    ,"item_number": mapper.val("ITEMNO")
    ,"description1": mapper.val("DESCRIPTION1")
    ,"description2": mapper.val("DESCRIPTION2")
    ,"upc": mapper.val("UPC")
    ,"manufacturer_model_number": mapper.val("MANUFACTURERMODELNO")
    ,"msrp": mapper.val("MSRP")
    ,"model": mapper.val("MODEL")
    ,"caliber_guage": mapper.val("CALIBERGAUGE")
    ,"manufacturer": mapper.val("MANUFACTURER")
    ,"type": mapper.val("TYPE")
    ,"action": mapper.val("ACTION")
    ,"barrel_length": mapper.val("BARRELLENGTH")
    ,"capacity": mapper.val("CAPACITY")
    ,"finish": mapper.val("FINISH")
    ,"overall_length": mapper.val("OVERALLLENGTH")
    ,"receiver": mapper.val("RECEIVER")
    ,"safety": mapper.val("SAFETY")
    ,"sights": mapper.val("SIGHTS")
    ,"stock_frame_grips": mapper.val("STOCKFRAMEGRIPS")
    ,"magazine": mapper.val("MAGAZINE")
    ,"weight": mapper.val("WEIGHT")
    ,"image_name": mapper.val("IMAGENAME")
    ,"chamber": mapper.val("CHAMBER")
    ,"drilled_and_tapped": mapper.val("DRILLEDANDTAPPED")
    ,"rate_of_twist": mapper.val("RATEOFTWIST")
    ,"item_type": mapper.val("ITEMTYPE")
    ,"additional_feature1": mapper.val("ADDITIONALFEATURE1")
    ,"additional_feature2": mapper.val("ADDITIONALFEATURE2")
    ,"additional_feature3": mapper.val("ADDITIONALFEATURE3")
    ,"shipping_weight": mapper.val("SHIPPINGWEIGHT")
    ,"bound_book_manufacturer": mapper.val("BOUNDBOOKMANUFACTURER")
    ,"bound_book_model": mapper.val("BOUNDBOOKMODEL")
    ,"bound_book_type": mapper.val("BOUNDBOOKTYPE")
    ,"nfa_thread_pattern": mapper.val("NFATHREADPATTERN")
    ,"nfa_attachment_method": mapper.val("NFAATTACHMENTMETHOD")
    ,"nfa_baffle_type": mapper.val("NFABAFFLETYPE")
    ,"silencer_can_be_disassembled": mapper.val("SILENCERCANBEDISASSEMBLED")
    ,"silencer_construction_material": mapper.val("SILENCERCONSTRUCTIONMATERIAL")
    ,"nfa_db_reduction": mapper.val("NFADBREDUCTION")
    ,"silencer_outside_diameter": mapper.val("SILENCEROUTSIDEDIAMETER")
    ,"nfa_form3_caliber": mapper.val("NFAFORM3CALIBER")
    ,"optic_magnification": mapper.val("OPTICMAGNIFICATION")
    ,"main_tube_size": mapper.val("MAINTUBESIZE")
    ,"adjustable_objective": mapper.val("ADJUSTABLEOBJECTIVE")
    ,"objective_size": mapper.val("OBJECTIVESIZE")
    ,"otptic_adjustments": mapper.val("OPTICADJUSTMENTS")
    ,"illuminated_reticle": mapper.val("ILLUMINATEDRETICLE")
    ,"reticle": mapper.val("RETICLE")
    ,"exclusive": mapper.val("EXCLUSIVE")
    ,"quantity": mapper.val("QUANTITY")
    ,"allocated": mapper.val("ALLOCATED")
    ,"on_sale": mapper.val("ONSALE")
    ,"price": mapper.val("PRICE")
    ,"current_price": mapper.val("CURRENTPRICE")
    ,"retail_map": mapper.val("RETAILMAP")
    ,"ffl_required": mapper.val("FFLREQUIRED")
    ,"sot_required": mapper.val("SOTREQUIRED")
    ,"exclusive_type": mapper.val("EXCLUSIVETYPE")
    ,"scope_cover_included": mapper.val("SCOPECOVERINCLUDED")
    ,"special": mapper.val("SPECIAL")
    ,"sights_type": mapper.val("SIGHTSTYPE")
    ,"case": mapper.val("CASE")
    ,"choke": mapper.val("CHOKE")
    ,"db_recuction": mapper.val("DBREDUCTION")
    ,"family": mapper.val("FAMILY")
    ,"finish_type": mapper.val("FINISHTYPE")
    ,"frame": mapper.val("FRAME")
    ,"grip_type": mapper.val("GRIPTYPE")
    ,"handgun_slide_material": mapper.val("HANDGUNSLIDEMATERIAL")
    ,"country_of_origin": mapper.val("COUNTRYOFORIGIN")
    ,"item_length": mapper.val("ITEMLENGTH")
    ,"item_width": mapper.val("ITEMWIDTH")
    ,"item_height": mapper.val("ITEMHEIGHT")
    ,"package_length": mapper.val("PACKAGELENGTH")
    ,"package_width": mapper.val("PACKAGEWIDTH")
    ,"package_height": mapper.val("PACKAGEHEIGHT")
    ,"item_group": mapper.val("ITEMGROUP")
}

processor.process(lipseys_product_mapping, data_file_path + "lipseys_catalog.csv", {"model": "ffl_tools.lipseys_product", "context": "{'tracking_disable': True}", "worker": 2, "batch_size": 200})
processor.write_to_file(data_file_path + "lipseys_catalog.sh", python_exe='python3', path='')