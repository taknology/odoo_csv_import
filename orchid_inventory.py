from odoo_csv_tools.lib import mapper
from odoo_csv_tools.lib.transform import Processor

from import_globals import (orchid_product_prefix
                            , orchid_image_file_path
                            , data_file_path)

#=IF(COUNTIFS(Sheet2!F:F,F367), "Exists", "Missing")

processor = Processor(data_file_path + "orchid_inventory.csv", delimiter=",")

orchid_product_mapping = {
    "id": mapper.m2o_map(orchid_product_prefix, mapper.val("barcode"))
    ,"part_number": mapper.val("part_number")
    ,"barcode": mapper.val("barcode")
    ,"description": mapper.val("description")
    ,"vendor_id": mapper.val("vendor_id")
    ,"vendor_name": mapper.val("vendor_name")
    ,"manufacturer": mapper.val("manufacture")
    ,"stock": mapper.val("stock")
    ,"cost": mapper.val("cost")
    ,"retail_price": mapper.val("retail_price")
    ,"sale_price": mapper.val("sale_price")
    ,"vendor_part_number": mapper.val("vendor_part_number")
    ,"website_part_title": mapper.val("website_part_title")
    ,"website_visibility": mapper.bool_val('website_visibility', ['1'], ['0',''])
    ,"pos_visibility": mapper.bool_val('pos_visibility', ['1'], ['0',''])
    ,"map": mapper.val("map")
    ,"part_image": mapper.val("part_image")
    ,"serial_number_flag": mapper.bool_val('serial_number_flag',['yes'], ['no'])
    ,"firearm_type": mapper.val("firearm_type")
    ,"caliber_ga": mapper.val("caliber_ga")
    ,"action": mapper.val("action")
    ,"importer": mapper.val("importer")
    ,"country_of_manufacturing": mapper.val("country_of_manufacturing")
    ,"model": mapper.val("model")
    ,"is_firearm": mapper.bool_val('is_firearm', ['1'], ['0',''])
    ,"department": mapper.val("department")
    ,"category": mapper.val("category")
    ,"sub_category_name": mapper.val("sub_category_name")
    ,"online_price": mapper.val("online_price")
    ,"msrp": mapper.val("msrp")
    ,"minimum_price": mapper.val("minimum_price")
    ,"part_type": mapper.val("part_type")
    ,"CustomField51": mapper.val("CustomField51")
    ,"CustomField52": mapper.val("CustomField52")
    ,"vendor": mapper.val("vendor")
    ,"vendor_detail": mapper.val("vendor_detail")
    ,"vendor_ffl_number": mapper.val("vendor_ffl_number")
    #,"image_1920": mapper.binary('image_1920', orchid_image_file_path)
    ,"serial_numbers": mapper.val("serial_numbers")
    ,"product_image1": mapper.val("product_image1")
    ,"product_image2": mapper.val("product_image2")
    ,"product_image3": mapper.val("product_image3")
    ,"product_image4": mapper.val("product_image4")
    ,"product_image5": mapper.val("product_image5")
    ,"product_image6": mapper.val("product_image6")
    ,"product_image7": mapper.val("product_image7")
    ,"product_image8": mapper.val("product_image8")
    ,"product_image9": mapper.val("product_image9")
    ,"product_image10": mapper.val("product_image10")
}

processor.process(orchid_product_mapping, data_file_path + "orchid_products.csv", {"model": "ffl_tools.orchid_product", "context": "{'tracking_disable': True}", "worker": 2, "batch_size": 200})
processor.write_to_file(data_file_path + "orchid_inventory.sh", python_exe='python3', path='')